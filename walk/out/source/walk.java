/* autogenerated by Processing revision 1289 on 2024-11-10 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class walk extends PApplet {

PVector canvas;
PVector worldOrigin;
PVector object;
PVector movementVector = new PVector(1, 1);
PVector directionVector;
boolean edgeHit = false;

enum Direction {
  forward,
    backward
}

Direction direction = Direction.forward;

public void setup() {
  /* size commented out by preprocessor */;
  canvas = new PVector(width, height);
  object = new PVector(10, 10);
  worldOrigin = new PVector(0, 0);
}

public void draw() {
  background(100);
  stroke(255, 150, 0);
  strokeWeight(5);

  bouncingDot();
}

public void bouncingDot () {
  point(object.x, object.y);

  if (object.equals(worldOrigin) | object.equals(canvas)) {
    directionToggle();
  }

  if (direction == Direction.forward) {
    object.add(movementVector);
  } else {
    object.sub(movementVector);
  }
}

public void directionToggle() {
  
  if (direction == Direction.forward) {
    direction = Direction.backward;
  } else {
    direction = Direction.forward;
  }

  edgeHit = !edgeHit;
}


  public void settings() { size(400, 400); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "walk" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
