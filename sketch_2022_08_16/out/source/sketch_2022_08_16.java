/* autogenerated by Processing revision 1289 on 2024-11-10 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class sketch_2022_08_16 extends PApplet {

float amp = 1; 
float freq = 15;
float theta = 0.0f; 

float rectWidth = 40;
float rectHeight = 40;
float strokePixels = 5;

float time = 0;
float sine;


public void setup () {
  /* size commented out by preprocessor */; 
  getSurface().setLocation(1500, 400);
}

public void draw() {

  sine = abs(sin(time/100));
  time++;
  //println(sine);

  background(0);

  rectMaker(newSine(0), newSine(0));
}

public void rectMaker (float colorOffsetA, float colorOffsetB) {

  for (int i = 0; i < width; i+=50) {
    for (int j = 0; j < height; j+=50) {

      float startPosY = height - rectHeight - strokePixels;
      float startPosX = width - rectWidth - strokePixels;
      float colorSine = newSine(0);


      colorMode(HSB, 1);
      stroke(1, 0, 1);
      fill(colorSine, 1, 1);

      strokeWeight(strokePixels);
      rect(startPosX - i, startPosY - j, rectWidth, rectHeight);
    }
  }
}

public float newSine (float phase) {
  float timeOverFreq = TWO_PI / freq * (time * 0.5f);
  float newSine = amp * sin(timeOverFreq) + phase;
  // time+=0.5;
  
  return newSine;
}


  public void settings() { size(800, 800); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "sketch_2022_08_16" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
